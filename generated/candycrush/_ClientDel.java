// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `CandyCrush.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package candycrush;

public interface _ClientDel extends Ice._ObjectDel {
	void newParticipant(String nick, int team,
			java.util.Map<String, String> __ctx,
			Ice.Instrumentation.InvocationObserver __obsv)
			throws IceInternal.LocalExceptionWrapper;

	void participantLeft(String nick, int team,
			java.util.Map<String, String> __ctx,
			Ice.Instrumentation.InvocationObserver __obsv)
			throws IceInternal.LocalExceptionWrapper;

	void startGame(java.util.Map<String, String> __ctx,
			Ice.Instrumentation.InvocationObserver __obsv)
			throws IceInternal.LocalExceptionWrapper;

	void endGame(int team, java.util.Map<String, String> __ctx,
			Ice.Instrumentation.InvocationObserver __obsv)
			throws IceInternal.LocalExceptionWrapper;

	void setBoard(int[][] boardValues, java.util.Map<String, String> __ctx,
			Ice.Instrumentation.InvocationObserver __obsv)
			throws IceInternal.LocalExceptionWrapper;

	void turn(int team, java.util.Map<String, String> __ctx,
			Ice.Instrumentation.InvocationObserver __obsv)
			throws IceInternal.LocalExceptionWrapper;

	void log(String message, java.util.Map<String, String> __ctx,
			Ice.Instrumentation.InvocationObserver __obsv)
			throws IceInternal.LocalExceptionWrapper;

	void customLog(String message, int code,
			java.util.Map<String, String> __ctx,
			Ice.Instrumentation.InvocationObserver __obsv)
			throws IceInternal.LocalExceptionWrapper;

	void logStatus(String statusMessage, java.util.Map<String, String> __ctx,
			Ice.Instrumentation.InvocationObserver __obsv)
			throws IceInternal.LocalExceptionWrapper;

	void makeMovement(Movement mov, java.util.Map<String, String> __ctx,
			Ice.Instrumentation.InvocationObserver __obsv)
			throws IceInternal.LocalExceptionWrapper;

	void fillNewSquares(Square[] newSquares,
			java.util.Map<String, String> __ctx,
			Ice.Instrumentation.InvocationObserver __obsv)
			throws IceInternal.LocalExceptionWrapper;

	void score(int team, int scored, java.util.Map<String, String> __ctx,
			Ice.Instrumentation.InvocationObserver __obsv)
			throws IceInternal.LocalExceptionWrapper;

	void receiveMessage(String from, String message,
			java.util.Map<String, String> __ctx,
			Ice.Instrumentation.InvocationObserver __obsv)
			throws IceInternal.LocalExceptionWrapper;
}
